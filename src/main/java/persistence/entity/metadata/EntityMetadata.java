package persistence.entity.metadata;

import java.lang.reflect.Field;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class EntityMetadata {

    private EntityTable entityTable;
    private EntityColumns columns;

    public void setEntityTable(EntityTable entityTable) {
        this.entityTable = entityTable;
    }

    public void setColumns(EntityColumns columns) {
        this.columns = columns;
    }

    public String getTableName() {
        return entityTable.getTableName();
    }

    public EntityColumns getColumns() {
        return columns;
    }

    public String getIdColumnName() {
        return columns.getIdColumn().getColumnName();
    }

    public EntityColumn getIdColumn() {
        return null;
    }

    public List<EntityColumn> getInsertTargetColumns() {
        return columns.getColumns()
                .stream()
                .filter(column -> !column.isDataAutoGenerated())
                .collect(Collectors.toList());
    }

    public EntityColumn getEntityColumnByColumnName(String columnName) {
        return columns.getColumnByColumnName(columnName);
    }


    public void setValue(Object object, String columnName, Object value) {
        Field field = columns.getColumnByColumnName(columnName).getField();
        field.setAccessible(true);
        try {
            field.set(object, value);
        } catch (IllegalAccessException e) {
            throw new RuntimeException(e);
        }
    }

    private Object getValue(Object entity, String columnName) {
        Field field = columns.getColumnByColumnName(columnName).getField();
        field.setAccessible(true);
        try {
            return field.get(entity);
        } catch (IllegalAccessException e) {
            throw new RuntimeException(e);
        }
    }

    public Map<String, Object> getColumnValues(Object entity) {
        return columns.getColumns().stream()
                .collect(Collectors.toMap(EntityColumn::getColumnName, column -> getValue(entity, column.getColumnName())));
    }

}
